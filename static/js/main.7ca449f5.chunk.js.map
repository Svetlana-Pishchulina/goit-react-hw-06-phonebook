{"version":3,"sources":["components/Section/Section.module.css","components/ContactsListItem/ContactsListItem.module.css","components/Filter/Filter.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","components/Section/Section.js","redux/contacts/contacts-selection.js","components/Form/Form.js","components/ContactsList/ContactsList.js","components/ContactsListItem/ContactsListItem.js","components/Filter/Filter.js","App.js","reportWebVitals.js","index.js","components/Form/Form.module.css"],"names":["module","exports","saveContactAction","createAction","name","number","payload","id","shortid","generate","deleteContactAction","updateFilterAction","contactsReduser","createReducer","actions","state","action","filter","contact","filterReducer","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contacts","persistReducer","devTools","process","persistor","persistStore","Section","title","children","className","styles","section","getContactsReducer","getFilterReducer","useForm","useState","Form","setName","setNumber","useSelector","dispatch","useDispatch","handleChange","evt","target","value","reset","form","onSubmit","preventDefault","find","alert","contactsActions","label","input","type","pattern","required","onChange","ContactsList","ContactsListItem","contactsReducer","toLowerCase","includes","map","listItem","button","onClick","onDeleteButtonClick","Filter","e","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.7ca449f5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2IEG3\",\"section\":\"Section_section___3wVR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactsListItem_listItem__1Mps9\",\"button\":\"ContactsListItem_button__oOtsb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3VmJA\",\"input\":\"Filter_input__3x_Ap\"};","import shortid from \"shortid\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst saveContactAction = createAction(\"saveConntact\", (name, number) => ({\r\n  payload: { id: shortid.generate(), name, number },\r\n}));\r\nconst deleteContactAction = createAction(\"deleteConntact\");\r\nconst updateFilterAction = createAction(\"updateFilter\");\r\n\r\nexport default { saveContactAction, deleteContactAction, updateFilterAction };\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nimport actions from \"./contacts-actions\";\r\n\r\nconst initialContactsState = [\r\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n];\r\n\r\nconst contactsReduser = createReducer(initialContactsState, {\r\n  [actions.saveContactAction]: (state, action) => {\r\n    return [...state, action.payload];\r\n  },\r\n  [actions.deleteContactAction]: (state, action) => {\r\n    return state.filter((contact) => contact.id !== action.payload);\r\n  },\r\n});\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n  [actions.updateFilterAction]: (state, action) => {\r\n    return action.payload;\r\n  },\r\n});\r\n\r\nexport default combineReducers({ contactsReduser, filterReducer });\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nimport reducer from \"./contacts/contacts-reducer\";\r\n\r\nconst contactsPersistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, reducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import styles from \"./Section.module.css\";\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <div className={styles.section}>\r\n      <h2 className={styles.title}>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\nexport default Section;\r\n","export const getContactsReducer = (state) => state.contacts.contactsReduser;\r\n\r\nexport const getFilterReducer = (state) => state.contacts.filterReducer;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport styles from \"./Form.module.css\";\r\nimport contactsActions from \"../../redux/contacts/contacts-actions\";\r\nimport { getContactsReducer } from \"../../redux/contacts/contacts-selection\";\r\n\r\nconst useForm = (key) => {\r\n  const [state, setState] = useState(\"\");\r\n\r\n  return [state, setState];\r\n};\r\n\r\nconst Form = () => {\r\n  const [name, setName] = useForm(\"name\");\r\n  const [number, setNumber] = useForm(\"number\");\r\n  const contacts = useSelector(getContactsReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (evt) => {\r\n    const { name, value } = evt.target;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n\r\n    if (contacts.find((contact) => contact.name === name)) {\r\n      alert(`${name} is already in contacts`);\r\n      return;\r\n    }\r\n    dispatch(contactsActions.saveContactAction(name, number));\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className={styles.form} onSubmit={handleSubmit}>\r\n        <label className={styles.label}>\r\n          Name\r\n          <input\r\n            className={styles.input}\r\n            value={name}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label className={styles.label}>\r\n          Nuber\r\n          <input\r\n            className={styles.input}\r\n            value={number}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","const ContactsList = ({ children }) => {\r\n  return <ul>{children}</ul>;\r\n};\r\n\r\nexport default ContactsList;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport styles from \"./ContactsListItem.module.css\";\r\nimport contactsActions from \"../../redux/contacts/contacts-actions\";\r\nimport {\r\n  getContactsReducer,\r\n  getFilterReducer,\r\n} from \"../../redux/contacts/contacts-selection\";\r\n\r\nconst ContactsListItem = () => {\r\n  const contacts = useSelector((state) => {\r\n    const contactsReducer = getContactsReducer(state);\r\n    const filterReducer = getFilterReducer(state);\r\n    const visibleContacts = contactsReducer.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filterReducer.toLowerCase())\r\n    );\r\n    return visibleContacts;\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n  const onDeleteButtonClick = (id) =>\r\n    dispatch(contactsActions.deleteContactAction(id));\r\n\r\n  return contacts.map(({ id, name, number }) => (\r\n    <li className={styles.listItem} key={id}>\r\n      {name}:{number}\r\n      <button className={styles.button} onClick={() => onDeleteButtonClick(id)}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  ));\r\n};\r\n\r\nexport default ContactsListItem;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport styles from \"./Filter.module.css\";\r\nimport contactsActions from \"../../redux/contacts/contacts-actions\";\r\nimport { getFilterReducer } from \"../../redux/contacts/contacts-selection\";\r\n\r\nconst Filter = () => {\r\n  const value = useSelector(getFilterReducer);\r\n  const dispatch = useDispatch();\r\n  const onChange = (e) =>\r\n    dispatch(contactsActions.updateFilterAction(e.target.value));\r\n  return (\r\n    <label className={styles.label}>\r\n      Find contacts by name\r\n      <input className={styles.input} value={value} onChange={onChange} />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\n\nimport Section from \"./components/Section\";\nimport Form from \"./components/Form\";\nimport ContactsList from \"./components/ContactsList\";\nimport ContactsListItem from \"./components/ContactsListItem\";\nimport Filter from \"./components/Filter\";\n\nfunction App() {\n  // const [contacts, setContacts] = useState([\n  //   { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n  //   { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n  //   { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n  //   { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n  // ]);\n\n  // const [filter, setFilter] = useState(\"\");\n\n  // useEffect(() => {\n  //   if (localStorage.getItem(\"contacts\")) {\n  //     setContacts(JSON.parse(localStorage.getItem(\"contacts\")));\n  //   }\n  // }, []);\n\n  // useEffect(\n  //   (prevState) => {\n  //     if (contacts !== prevState) {\n  //       localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  //     }\n  //   },\n  //   [contacts]\n  // );\n\n  // const formSubmitHandler = (data) => {\n  //   if (contacts.find((contact) => contact.name === data.name)) {\n  //     alert(`${data.name} is already in contacts`);\n  //     return;\n  //   }\n  //   setContacts((prevState) => [...prevState, data]);\n  // };\n\n  // const deleteContact = (deletedContactId) => {\n  //   setContacts((prevState) =>\n  //     prevState.filter((contact) => contact.id !== deletedContactId)\n  //   );\n  // };\n\n  // const onChangeSearchInput = (evt) => {\n  //   setFilter(evt.target.value);\n  // };\n\n  // const visibleContacts = contacts.filter((contact) =>\n  //   contact.name.toLowerCase().includes(filter.toLowerCase())\n  // );\n\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <Form />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        <ContactsList>\n          <ContactsListItem />\n        </ContactsList>\n      </Section>\n    </>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nimport store from \"./redux/store\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__ms8YS\",\"label\":\"Form_label__3LHKV\",\"input\":\"Form_input__2WF5M\"};"],"sourceRoot":""}