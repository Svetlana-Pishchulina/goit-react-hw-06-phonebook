{"version":3,"sources":["components/Section/Section.module.css","components/ContactsListItem/ContactsListItem.module.css","components/Filter/Filter.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","components/Section/Section.js","redux/contacts/contacts-selection.js","components/Form/Form.js","components/ContactsList/ContactsList.js","components/ContactsListItem/ContactsListItem.js","components/Filter/Filter.js","App.js","reportWebVitals.js","index.js","components/Form/Form.module.css"],"names":["module","exports","saveContactAction","createAction","name","number","payload","id","shortid","generate","deleteContactAction","updateFilterAction","contactsReduser","createReducer","actions","state","action","filter","contact","filterReducer","combineReducers","rootReducer","contacts","reducer","store","createStore","composeWithDevTools","Section","title","children","className","styles","section","getContactsReducer","getFilterReducer","useForm","key","useState","Form","setName","setNumber","useSelector","dispatch","useDispatch","handleChange","evt","target","value","reset","form","onSubmit","preventDefault","find","alert","contactsActions","label","input","type","pattern","required","onChange","ContactsList","ContactsListItem","contactsReducer","toLowerCase","includes","map","listItem","button","onClick","onDeleteButtonClick","Filter","e","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd7fa877.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2IEG3\",\"section\":\"Section_section___3wVR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactsListItem_listItem__1Mps9\",\"button\":\"ContactsListItem_button__oOtsb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3VmJA\",\"input\":\"Filter_input__3x_Ap\"};","import shortid from \"shortid\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\nimport actionTypes from \"./contacts-actionTypes\";\r\n\r\n// const actionTypes = {\r\n//   SAVE_CONTACT: \"saveConntact\",\r\n//   DELETE_CONTACT: \"deleteConntact\",\r\n//   UPDATE_FILTER: \"updateFilter\",\r\n// };\r\nconst saveContactAction = createAction(\"saveConntact\", (name, number) => ({\r\n  payload: { id: shortid.generate(), name, number },\r\n}));\r\nconst deleteContactAction = createAction(\"deleteConntact\");\r\nconst updateFilterAction = createAction(\"updateFilter\");\r\n\r\n// const saveContactAction = (name, number) => ({\r\n//   type: actionTypes.SAVE_CONTACT,\r\n//   payload: { name, number, id: shortid.generate() },\r\n// });\r\n\r\n// const deleteContactAction = (contactId) => ({\r\n//   type: actionTypes.DELETE_CONTACT,\r\n//   payload: contactId,\r\n// });\r\n\r\n// const updateFilterAction = (value) => ({\r\n//   type: actionTypes.UPDATE_FILTER,\r\n//   payload: value,\r\n// });\r\n\r\nexport default { saveContactAction, deleteContactAction, updateFilterAction };\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nimport actions from \"./contacts-actions\";\r\n\r\nconst initialContactsState = [\r\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n];\r\n\r\nconst contactsReduser = createReducer(initialContactsState, {\r\n  [actions.saveContactAction]: (state, action) => {\r\n    // console.log(state);\r\n    // console.log(action.payload);\r\n    return [...state, action.payload];\r\n  },\r\n  [actions.deleteContactAction]: (state, action) => {\r\n    // console.log(state);\r\n    return state.filter((contact) => contact.id !== action.payload);\r\n  },\r\n});\r\n// const contactsReduser = (state = initialContactsState, action) => {\r\n//   switch (action.type) {\r\n//     case actionTypes.SAVE_CONTACT:\r\n//       // if (state.find((contact) => contact.name === action.payload.name)) {\r\n//       //   alert(`${action.payload.name} is already in contacts`);\r\n//       //   return state;\r\n//       // }\r\n//       return [...state, action.payload];\r\n\r\n//     case actionTypes.DELETE_CONTACT:\r\n//       return state.filter((contact) => contact.id !== action.payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n  [actions.updateFilterAction]: (state, action) => {\r\n    // console.log(state);\r\n    return action.payload;\r\n  },\r\n});\r\n// const filterReducer = (state = \"\", action) => {\r\n//   switch (action.type) {\r\n//     case actionTypes.UPDATE_FILTER:\r\n//       return action.payload;\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nexport default combineReducers({ contactsReduser, filterReducer });\r\n","import { createStore, combineReducers } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport reducer from \"./contacts/contacts-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: reducer,\r\n});\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\nexport default store;\r\n","import styles from \"./Section.module.css\";\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <div className={styles.section}>\r\n      <h2 className={styles.title}>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\nexport default Section;\r\n","export const getContactsReducer = (state) => state.contacts.contactsReduser;\r\n\r\nexport const getFilterReducer = (state) => state.contacts.filterReducer;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\n// import { connect } from \"react-redux\";\r\n// import shortid from \"shortid\";\r\n\r\nimport styles from \"./Form.module.css\";\r\nimport contactsActions from \"../../redux/contacts/contacts-actions\";\r\nimport { getContactsReducer } from \"../../redux/contacts/contacts-selection\";\r\n\r\nconst useForm = (key) => {\r\n  const [state, setState] = useState(\"\");\r\n\r\n  return [state, setState];\r\n};\r\n\r\nconst Form = () => {\r\n  const [name, setName] = useForm(\"name\");\r\n  const [number, setNumber] = useForm(\"number\");\r\n  const contacts = useSelector(getContactsReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  // const id = shortid.generate();\r\n\r\n  const handleChange = (evt) => {\r\n    const { name, value } = evt.target;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  // const currentContact = { name, number, id };\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n\r\n    if (contacts.find((contact) => contact.name === name)) {\r\n      alert(`${name} is already in contacts`);\r\n      return;\r\n    }\r\n    dispatch(contactsActions.saveContactAction(name, number));\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className={styles.form} onSubmit={handleSubmit}>\r\n        <label className={styles.label}>\r\n          Name\r\n          <input\r\n            className={styles.input}\r\n            value={name}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label className={styles.label}>\r\n          Nuber\r\n          <input\r\n            className={styles.input}\r\n            value={number}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\n// const mapStateToProps = (state) => ({\r\n//   contacts: state.contacts.contactsReduser,\r\n// });\r\n\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   propOnSubmit: (name, number) =>\r\n//     dispatch(contactsActions.saveContactAction(name, number)),\r\n// });\r\n// export default connect(mapStateToProps, mapDispatchToProps)(Form);\r\nexport default Form;\r\n","const ContactsList = ({ children }) => {\r\n  return <ul>{children}</ul>;\r\n};\r\n\r\nexport default ContactsList;\r\n","// import { connect } from \"react-redux\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport styles from \"./ContactsListItem.module.css\";\r\nimport contactsActions from \"../../redux/contacts/contacts-actions\";\r\nimport {\r\n  getContactsReducer,\r\n  getFilterReducer,\r\n} from \"../../redux/contacts/contacts-selection\";\r\n\r\nconst ContactsListItem = () => {\r\n  const contacts = useSelector((state) => {\r\n    // const { contactsReduser, filterReducer } = state.contacts;\r\n    const contactsReducer = getContactsReducer(state);\r\n    const filterReducer = getFilterReducer(state);\r\n    const visibleContacts = contactsReducer.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filterReducer.toLowerCase())\r\n    );\r\n    return visibleContacts;\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n  const onDeleteButtonClick = (id) =>\r\n    dispatch(contactsActions.deleteContactAction(id));\r\n\r\n  return contacts.map(({ id, name, number }) => (\r\n    <li className={styles.listItem} key={id}>\r\n      {name}:{number}\r\n      <button className={styles.button} onClick={() => onDeleteButtonClick(id)}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  ));\r\n};\r\n\r\n// const mapStateToProps = (state) => {\r\n//   const { contactsReduser, filterReducer } = state.contacts;\r\n//   const visibleContacts = contactsReduser.filter((contact) =>\r\n//     contact.name.toLowerCase().includes(filterReducer.toLowerCase())\r\n//   );\r\n//   return {\r\n//     contacts: visibleContacts,\r\n//     // contacts: state.contacts.contactsReduser,\r\n//   };\r\n// };\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   onDeleteButtonClick: (id) =>\r\n//     dispatch(contactsActions.deleteContactAction(id)),\r\n// });\r\n// export default connect(mapStateToProps, mapDispatchToProps)(ContactsListItem);\r\nexport default ContactsListItem;\r\n","// import { connect } from \"react-redux\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport styles from \"./Filter.module.css\";\r\nimport contactsActions from \"../../redux/contacts/contacts-actions\";\r\nimport { getFilterReducer } from \"../../redux/contacts/contacts-selection\";\r\n\r\nconst Filter = () => {\r\n  const value = useSelector(getFilterReducer);\r\n  const dispatch = useDispatch();\r\n  const onChange = (e) =>\r\n    dispatch(contactsActions.updateFilterAction(e.target.value));\r\n  return (\r\n    <label className={styles.label}>\r\n      Find contacts by name\r\n      <input className={styles.input} value={value} onChange={onChange} />\r\n    </label>\r\n  );\r\n};\r\n// const mapStateToProps = (state) => ({\r\n//   // value: state.filter,\r\n//   value: state.contacts.filterReducer,\r\n// });\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   onChange: (e) => dispatch(contactsActions.updateFilterAction(e.target.value)),\r\n// });\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\nexport default Filter;\r\n","import React from \"react\";\n\nimport Section from \"./components/Section\";\nimport Form from \"./components/Form\";\nimport ContactsList from \"./components/ContactsList\";\nimport ContactsListItem from \"./components/ContactsListItem\";\nimport Filter from \"./components/Filter\";\n\nfunction App() {\n  // const [contacts, setContacts] = useState([\n  //   { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n  //   { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n  //   { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n  //   { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n  // ]);\n\n  // const [filter, setFilter] = useState(\"\");\n\n  // useEffect(() => {\n  //   if (localStorage.getItem(\"contacts\")) {\n  //     setContacts(JSON.parse(localStorage.getItem(\"contacts\")));\n  //   }\n  // }, []);\n\n  // useEffect(\n  //   (prevState) => {\n  //     if (contacts !== prevState) {\n  //       localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  //     }\n  //   },\n  //   [contacts]\n  // );\n\n  // const formSubmitHandler = (data) => {\n  //   if (contacts.find((contact) => contact.name === data.name)) {\n  //     alert(`${data.name} is already in contacts`);\n  //     return;\n  //   }\n  //   setContacts((prevState) => [...prevState, data]);\n  // };\n\n  // const deleteContact = (deletedContactId) => {\n  //   setContacts((prevState) =>\n  //     prevState.filter((contact) => contact.id !== deletedContactId)\n  //   );\n  // };\n\n  // const onChangeSearchInput = (evt) => {\n  //   setFilter(evt.target.value);\n  // };\n\n  // const visibleContacts = contacts.filter((contact) =>\n  //   contact.name.toLowerCase().includes(filter.toLowerCase())\n  // );\n\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <Form />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        <ContactsList>\n          <ContactsListItem />\n        </ContactsList>\n      </Section>\n    </>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./redux/store\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__ms8YS\",\"label\":\"Form_label__3LHKV\",\"input\":\"Form_input__2WF5M\"};"],"sourceRoot":""}